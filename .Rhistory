q()
n
pairs(diamonds)
?geom_point
q()
n
q()
n
q()
n
?read.csv
str(iris)
iris$Species<-as.character(iris$Species)
str(iris)
lm(Sepal.Length~Species,swiss)
lm(Sepal.Length~Species,data=swiss)
lm(Sepal.Length~Species,data=swiss)
lm(Sepal.Length~Species,data=iris)
str(iris)
lm(Sepal.Length~Species,data=iris)
summary(iris)
 str(iris$Species)
?lm
arsenal::tableby(Species~Sepal.Length,data=iris)
summary(arsenal::tableby(Species~Sepal.Length,data=iris))
lm(Sepal.Length~Species,data=iris)
str(iris)
library(effects);plot(precitorEffects(lm(Sepal.Length~Species,data=iris)))
library(effects);plot(predictorEffectEffects(lm(Sepal.Length~Species,data=iris)))
library(effects);plot(predictorEffects(lm(Sepal.Length~Species,data=iris)))
summary(iris)
table(iris)
table(iris$Species)
?lm
?model.matrix
str(iris$Species)
str(as.factor(iris$Species))
q()
n
p/10
?trunc
x<-c(1.4,2.3)
ceiling(x)
floor(x)
trunc(x)
trunc(1.343)
trunc(2.343)
trunc(2.643)
nzc
x
x
fx
nzc
beta
nzc
nzc
fx
beta
fx
x
str(x)
y
beta
str(x)
nzc
fx
fx+eps
drop(fx+eps)
fx+eps
?drop
px
ly
head(x)
str(x)
str(y)
library(performance)
?performance
y
roc
f
model.extract
model 
performance_roc()
performance_roc(model)
performance_roc(model,new_data=test_data)
check_model(model)
performanance_aicc(model)
performance_aicc(model)
performance(model)
?fortify
library(ggplot2)
predict(mod)[1:2]
residuals(mod)
scale(residuals(mod))
drop(scale(residuals(mod)))
q()
n
